// Generated by view binder compiler. Do not edit!
package fr.epf.min1.projetandroidvelib.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import fr.epf.min1.projetandroidvelib.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailsStationsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addToFavoritesButton;

  @NonNull
  public final TextView capacity;

  @NonNull
  public final TextView capacityTv;

  @NonNull
  public final TextView nbBorneDispo;

  @NonNull
  public final TextView nbBorneDispoTv;

  @NonNull
  public final TextView nbEbike;

  @NonNull
  public final TextView nbEbikeTv;

  @NonNull
  public final TextView nbMech;

  @NonNull
  public final TextView nbMechTv;

  @NonNull
  public final TextView nbVeloDispo;

  @NonNull
  public final TextView nbVeloDispoTv;

  @NonNull
  public final TextView operationnel;

  @NonNull
  public final TextView operationnelTv;

  @NonNull
  public final TextView stationName;

  private ActivityDetailsStationsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button addToFavoritesButton, @NonNull TextView capacity,
      @NonNull TextView capacityTv, @NonNull TextView nbBorneDispo,
      @NonNull TextView nbBorneDispoTv, @NonNull TextView nbEbike, @NonNull TextView nbEbikeTv,
      @NonNull TextView nbMech, @NonNull TextView nbMechTv, @NonNull TextView nbVeloDispo,
      @NonNull TextView nbVeloDispoTv, @NonNull TextView operationnel,
      @NonNull TextView operationnelTv, @NonNull TextView stationName) {
    this.rootView = rootView;
    this.addToFavoritesButton = addToFavoritesButton;
    this.capacity = capacity;
    this.capacityTv = capacityTv;
    this.nbBorneDispo = nbBorneDispo;
    this.nbBorneDispoTv = nbBorneDispoTv;
    this.nbEbike = nbEbike;
    this.nbEbikeTv = nbEbikeTv;
    this.nbMech = nbMech;
    this.nbMechTv = nbMechTv;
    this.nbVeloDispo = nbVeloDispo;
    this.nbVeloDispoTv = nbVeloDispoTv;
    this.operationnel = operationnel;
    this.operationnelTv = operationnelTv;
    this.stationName = stationName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailsStationsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailsStationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_details_stations, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailsStationsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_to_favorites_button;
      Button addToFavoritesButton = ViewBindings.findChildViewById(rootView, id);
      if (addToFavoritesButton == null) {
        break missingId;
      }

      id = R.id.capacity;
      TextView capacity = ViewBindings.findChildViewById(rootView, id);
      if (capacity == null) {
        break missingId;
      }

      id = R.id.capacity_tv;
      TextView capacityTv = ViewBindings.findChildViewById(rootView, id);
      if (capacityTv == null) {
        break missingId;
      }

      id = R.id.nb_borne_dispo;
      TextView nbBorneDispo = ViewBindings.findChildViewById(rootView, id);
      if (nbBorneDispo == null) {
        break missingId;
      }

      id = R.id.nb_borne_dispo_tv;
      TextView nbBorneDispoTv = ViewBindings.findChildViewById(rootView, id);
      if (nbBorneDispoTv == null) {
        break missingId;
      }

      id = R.id.nb_ebike;
      TextView nbEbike = ViewBindings.findChildViewById(rootView, id);
      if (nbEbike == null) {
        break missingId;
      }

      id = R.id.nb_ebike_tv;
      TextView nbEbikeTv = ViewBindings.findChildViewById(rootView, id);
      if (nbEbikeTv == null) {
        break missingId;
      }

      id = R.id.nb_mech;
      TextView nbMech = ViewBindings.findChildViewById(rootView, id);
      if (nbMech == null) {
        break missingId;
      }

      id = R.id.nb_mech_tv;
      TextView nbMechTv = ViewBindings.findChildViewById(rootView, id);
      if (nbMechTv == null) {
        break missingId;
      }

      id = R.id.nb_velo_dispo;
      TextView nbVeloDispo = ViewBindings.findChildViewById(rootView, id);
      if (nbVeloDispo == null) {
        break missingId;
      }

      id = R.id.nb_velo_dispo_tv;
      TextView nbVeloDispoTv = ViewBindings.findChildViewById(rootView, id);
      if (nbVeloDispoTv == null) {
        break missingId;
      }

      id = R.id.operationnel;
      TextView operationnel = ViewBindings.findChildViewById(rootView, id);
      if (operationnel == null) {
        break missingId;
      }

      id = R.id.operationnel_tv;
      TextView operationnelTv = ViewBindings.findChildViewById(rootView, id);
      if (operationnelTv == null) {
        break missingId;
      }

      id = R.id.station_name;
      TextView stationName = ViewBindings.findChildViewById(rootView, id);
      if (stationName == null) {
        break missingId;
      }

      return new ActivityDetailsStationsBinding((ConstraintLayout) rootView, addToFavoritesButton,
          capacity, capacityTv, nbBorneDispo, nbBorneDispoTv, nbEbike, nbEbikeTv, nbMech, nbMechTv,
          nbVeloDispo, nbVeloDispoTv, operationnel, operationnelTv, stationName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
